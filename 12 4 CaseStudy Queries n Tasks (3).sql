
USE [PRODUCT DATABASE]
GO

SELECT * FROM CUSTOMERS_DATA 
SELECT * FROM PRODUCTS_DATA 
SELECT * FROM TIME_DATA 
SELECT * FROM SALES_DATA 


-- QUERY  #1: HOW TO REPORT PRODUCT WISE TOTAL SALES? 
SELECT *
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey


-- QUERY #2
SELECT EnglishProductName, SalesAmount
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey


-- QUERY #3
SELECT EnglishProductName, SUM(SalesAmount)
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName


-- QUERY #4
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName



-- QUERY #5 : HOW TO REPORT PRODUCT WISE TOTAL SALES ABOVE 1000 USD?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName
HAVING SUM(SalesAmount) > 1000  


-- QUERY #6 : HOW TO REPORT PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
SELECT EnglishProductName, 
SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000





-- QUERY #7 : HOW TO REPORT PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000
ORDER BY TOTAL_SALES DESC						


-- QUERY #8 : HOW TO REPORT PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000
ORDER BY 2 DESC					-- ORDERING THE DATA BY USING COLUMN CARDINAL POSITION. 


-- QUERY 9:  WRITE A QUERY TO REPORT SUM OF SALES AND TAX FOR PRODUCTS WITH MAXIMUM DEALER PRICE ?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
WHERE
PRODUCTS_DATA.DealerPrice = (SELECT MAX(DealerPrice) FROM PRODUCTS_DATA)
GROUP BY EnglishProductName
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000
ORDER BY 2 DESC	



-- QUERY 10: REPORT SUM OF SALES FOR PRODUCTS WITH MAXIMUM DEALER PRICE BUT NOT FOR MINIMAL LIST PRICE ?
-- NESTED SUB QUERY
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
WHERE
PRODUCTS_DATA.DealerPrice 
		IN (	SELECT MAX(DealerPrice) FROM PRODUCTS_DATA 
				WHERE  LISTPRICE 
					NOT IN ( SELECT MIN(LISTPRICE) FROM PRODUCTS_DATA ) )
GROUP BY EnglishProductName


SELECT PRODUCTS_DATA.EnglishProductName, SUM(SALES_DATA.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
WHERE
PRODUCTS_DATA.DealerPrice 
		IN (	SELECT MAX(DealerPrice) FROM PRODUCTS_DATA 
				WHERE  LISTPRICE 
					NOT IN ( SELECT MIN(LISTPRICE) FROM PRODUCTS_DATA ) )
GROUP BY PRODUCTS_DATA.EnglishProductName


SELECT P.EnglishProductName, SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN
PRODUCTS_DATA AS P
ON
S.ProductKey = P.ProductKey
WHERE
P.DealerPrice 
		IN (	SELECT MAX(DealerPrice) FROM PRODUCTS_DATA 
				WHERE  LISTPRICE 
					NOT IN ( SELECT MIN(LISTPRICE) FROM PRODUCTS_DATA ) )
GROUP BY P.EnglishProductName





-- EXAMPLES TO JOIN MORE THAN TWO TABLES:
SELECT * FROM SALES_DATA
INNER JOIN 
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
INNER JOIN
TIME_DATA
ON
SALES_DATA.ORDERDATEKEY = TIME_DATA.TIMEKEY



SELECT * FROM SALES_DATA
INNER JOIN 
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
INNER JOIN
TIME_DATA
ON
SALES_DATA.ORDERDATEKEY = TIME_DATA.TIMEKEY
INNER JOIN 
CUSTOMERS_DATA 
ON
SALES_DATA.CustomerKey = CUSTOMERS_DATA.CustomerKey 








-- Q1:	HOW TO REPORT YEAR WISE TOTAL SALES?
-- Q2:  HOW TO REPORT YEAR WISE, QUARTER WISE TOTAL SALES AND TOTAL TAX?
-- Q3:  HOW TO REPORT YEAR WISE, QUARTER WISE, MONTH WISE TOTAL SALES AND TOTAL TAX?
-- Q4:  HOW TO REPORT YEAR WISE, QUARTER WISE TOTAL SALES AND TOTAL TAX FOR JUNE MONTH ?
-- Q5:  HOW TO REPORT CLASS WISE, COLOR WISE PRODUCTS FOR EACH YEAR BASED ON ASC ORDER OF SALES?
-- Q6: HOW TO REPORT TOTAL SALES FOR SUCH PRODUCTS WITH MAXIMUM NUMBER OF SALES?
-- Q7: HOW TO REPORT TOTAL SALES FOR SUCH PRODUCTS EXCEPT WITH MINIMUM NUMBER OF SALES?
-- Q8: HOW TO COMBINE THE RESULTS FROM ABOVE TWO QUERIES.
-- Q9: HOW TO ADDRESS POSSIBLE BLOCKING ISSUES FROM ABOVE TWO QUERIES?
-- Q10: HOW TO REPORT YEAR WISE, CUSTOMER WISE, PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?



-- Q1:	HOW TO REPORT YEAR WISE TOTAL SALES?
SELECT T.CalendarYear, SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
GROUP BY T.CalendarYear


-- Q2:  HOW TO REPORT YEAR WISE, QUARTER WISE TOTAL SALES AND TOTAL TAX?
SELECT T.CalendarYear, T.CalendarQuarter, 
SUM(S.SalesAmount) AS TOTAL_SALES, SUM(S.TAXAMT) AS TOTAL_TAX
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
GROUP BY T.CalendarYear, T.CalendarQuarter



-- Q3:  HOW TO REPORT YEAR WISE, QUARTER WISE, MONTH WISE TOTAL SALES AND TOTAL TAX?
SELECT T.CalendarYear, T.CalendarQuarter, T.EnglishMonthName,
SUM(S.SalesAmount) AS TOTAL_SALES, SUM(S.TAXAMT) AS TOTAL_TAX
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
GROUP BY T.CalendarYear, T.CalendarQuarter,  T.EnglishMonthName

-- Q4:  HOW TO REPORT YEAR WISE, QUARTER WISE TOTAL SALES AND TOTAL TAX FOR JUNE MONTH ?
SELECT T.CalendarYear, T.CalendarQuarter, 
SUM(S.SalesAmount) AS TOTAL_SALES, SUM(S.TAXAMT) AS TOTAL_TAX
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
WHERE T.EnglishMonthName = 'JUNE'
GROUP BY T.CalendarYear, T.CalendarQuarter


-- Q5:  HOW TO REPORT CLASS WISE, COLOR WISE PRODUCTS FOR EACH YEAR BASED ON ASC ORDER OF SALES?
SELECT 
P.Class, P.Color, T.CalendarYear, 
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
GROUP BY P.Class, P.Color, T.CalendarYear


-- Q6: HOW TO REPORT TOTAL SALES FOR SUCH PRODUCTS WITH MAXIMUM NUMBER OF SALES?

-- STEP 1: IDENTIFY THE PRODUCTS THAT HAVE MAX SALE VALUE:
SELECT 
P.EnglishProductName,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
GROUP BY P.EnglishProductName

CREATE VIEW VW_SALE_PROIDUCTS 
AS
SELECT 
P.EnglishProductName,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
GROUP BY P.EnglishProductName


SELECT EnglishProductName FROM VW_SALE_PROIDUCTS 
				WHERE TOTAL_SALES = (SELECT MAX(TOTAL_SALES) FROM VW_SALE_PROIDUCTS)

-- STEP 2: 
SELECT 
P.EnglishProductName, P.Color, P.Class,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
WHERE
P.EnglishProductName IN (
							SELECT EnglishProductName FROM VW_SALE_PROIDUCTS 
							WHERE TOTAL_SALES = (SELECT MAX(TOTAL_SALES) FROM VW_SALE_PROIDUCTS)
						)
GROUP BY P.EnglishProductName, P.Color, P.Class




-- Q7: HOW TO REPORT TOTAL SALES FOR SUCH PRODUCTS EXCEPT WITH MINIMUM NUMBER OF SALES?
SELECT 
P.EnglishProductName, P.Color, P.Class,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
WHERE
P.EnglishProductName NOT IN (
							SELECT EnglishProductName FROM VW_SALE_PROIDUCTS 
							WHERE TOTAL_SALES = (SELECT MIN(TOTAL_SALES) FROM VW_SALE_PROIDUCTS)
						)
GROUP BY P.EnglishProductName, P.Color, P.Class



-- Q8: HOW TO COMBINE THE RESULTS FROM ABOVE TWO QUERIES ?
SELECT 
P.EnglishProductName, P.Color, P.Class,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
WHERE
P.EnglishProductName NOT IN (
							SELECT EnglishProductName FROM VW_SALE_PROIDUCTS 
							WHERE TOTAL_SALES = (SELECT MIN(TOTAL_SALES) FROM VW_SALE_PROIDUCTS)
						)
OR
P.EnglishProductName IN (
							SELECT EnglishProductName FROM VW_SALE_PROIDUCTS 
							WHERE TOTAL_SALES = (SELECT MAX(TOTAL_SALES) FROM VW_SALE_PROIDUCTS)
						)
GROUP BY P.EnglishProductName, P.Color, P.Class



-- Q9: HOW TO ADDRESS POSSIBLE BLOCKING ISSUES FROM ABOVE TWO QUERIES?
SELECT 
P.EnglishProductName, P.Color, P.Class,
SUM(S.SalesAmount) AS TOTAL_SALES 
FROM SALES_DATA  AS S (READPAST)
INNER JOIN PRODUCTS_DATA AS P (READPAST)
ON
P.ProductKey = S.ProductKey
WHERE
P.EnglishProductName NOT IN (
							SELECT EnglishProductName FROM VW_SALE_PROIDUCTS 
							WHERE TOTAL_SALES = (SELECT MIN(TOTAL_SALES) FROM VW_SALE_PROIDUCTS)
						)
OR
P.EnglishProductName IN (
							SELECT EnglishProductName FROM VW_SALE_PROIDUCTS 
							WHERE TOTAL_SALES = (SELECT MAX(TOTAL_SALES) FROM VW_SALE_PROIDUCTS)
						)
GROUP BY P.EnglishProductName, P.Color, P.Class



-- Q10: HOW TO REPORT YEAR WISE, CUSTOMER WISE, PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
SELECT 
T.CalendarYear,  C.FirstName + '  ' + C.LastName AS FULLNAME, P.EnglishProductName,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
INNER JOIN CUSTOMERS_DATA AS C
ON
C.CustomerKey = S.CustomerKey
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey 
GROUP BY T.CalendarYear,  C.FirstName + '  ' + C.LastName, P.EnglishProductName
HAVING SUM(S.SalesAmount) > 1000