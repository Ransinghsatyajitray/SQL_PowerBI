-- QUERY 1: 
CREATE DATABASE UNIVERSITY_DATABASE
GO
USE UNIVERSITY_DATABASE
GO
-- QUERY 2:
CREATE TABLE TBLCOURSES
(
COURSE_ID INT UNIQUE,			
COURSE_NAME VARCHAR(30) NOT NULL,	
COURSE_DUR INT CHECK (COURSE_DUR = 120  OR COURSE_DUR = 180)
)
-- QUERY 3: 
INSERT INTO TBLCOURSES VALUES (101, 'COMPUTERS', 120)
INSERT INTO TBLCOURSES VALUES (102, 'CIVIL', 180) 
INSERT INTO TBLCOURSES VALUES (103, 'ROBOTICS', 120)

-- QUERY 4: 
SELECT * FROM TBLCOURSES

-- TESTING UNIQUE KEY:
INSERT INTO TBLCOURSES VALUES (103, 'AI TECHNOLOGY', 120)

-- TESTING CHECK CONSTRAINT:
INSERT INTO TBLCOURSES VALUES (105, 'AI TECHNOLOGY', -120)

-- TESTING NOT NULL CONSTRAINT:
INSERT INTO TBLCOURSES VALUES (104, NULL, 120)



-- HOW TO DEFINE STUDENTS TABLE, MAKE IT RELATED TO ABOVE COURSES TABLE?
CREATE TABLE tblStudents
(
STD_ID			INT	PRIMARY KEY,	-- THIS COLUMN DOES NOT ALLOW DUPLICATES & NULLs 
STD_NAME		VARCHAR(30) NOT NULL, -- THIS COLUMN DOES NOT ALLOW NULLs
STD_AGE			INT	CHECK (STD_AGE >= 18),
STD_COURSE_ID	INT REFERENCES TBLCOURSES(COURSE_ID) -- THIS COLUMN CAN ACCEPT ONLY VALID COURSE IDs
)

INSERT  INTO  TBLSTUDENTS VALUES (1001, 'SAI', 34, 101),        (1002, 'JON', 34, 101)   
INSERT  INTO  TBLSTUDENTS VALUES (1003, 'JOHNE', 34, 102),		(1004, 'JOHNY', 34, 102)   

INSERT  INTO  TBLSTUDENTS VALUES (1005, 'AMIN', 29, 109)	-- ERROR. REASON : INVALID COURSE ID
INSERT  INTO  TBLSTUDENTS VALUES (1006, 'AMINI', 29, 9999)	-- ERROR. REASON : INVALID COURSE ID

SELECT * FROM TBLSTUDENTS


CREATE TABLE TBLSTAFF
(
STF_ID INT IDENTITY(100001, 1) PRIMARY KEY,			-- IDENTITY : TO AUTO INSERT SEQUENCE OF VALUES	
STF_NAME VARCHAR(30) NOT NULL,		
STF_GENDER CHAR CHECK (STF_GENDER IN ('M','F')) DEFAULT 'F',
STF_COURSE_ID INT REFERENCES tblcourses (course_id)  
)

INSERT INTO TBLSTAFF VALUES 	('JOHN',  'M', 101),  ('JOHNY',  'M', 101)
INSERT INTO TBLSTAFF (STF_NAME, STF_COURSE_ID)  	VALUES  ('JEFF', 101)
SELECT * FROM TBLSTAFF
INSERT INTO TBLSTAFF VALUES 	('AMINISH',  'M', 9999)		-- ERROR. REASON : INVALID COURSE ID

TRUNCATE TABLE TBLSTAFF				-- IDENTITY VALUE IS RESET.
delete from TBLSTAFF

-- RULE : TO INSERT DEFAULT VALUE INTO A COLUMN, SPECIFY REMAINING COLUMNS AND THEIR VALUES. 
INSERT INTO TBLSTAFF(STF_NAME, STF_COURSE_ID) VALUES 	('SAM',  101)

SELECT * FROM TBLSTAFF


-- HOW DO YOU PROOVE THAT PRIMARY KEY IS HAVING MORE PRIORITY COMPARED TO FOREIGN KEY?


CREATE TABLE TEST_TABLE 
(
COL1 INT IDENTITY (1,2),			-- START VALUE (SEED) = 1.  INCREMENT FOR EVERY INSERT = 2
COL2 INT 
)

CREATE TABLE TEST_TABLEV2
(
COL1 INT IDENTITY (1001, -1),		-- START VALUE (SEED) = 1001.  INCREMENT FOR EVERY INSERT = -1
COL2 INT 
)

CREATE TABLE TEST_TABLEV3
(
COL1 INT IDENTITY ,				-- START VALUE (SEED) = 1.  INCREMENT FOR EVERY INSERT = 1
COL2 INT 
)



/*
SCHEMAS	:	DATABASE OBJECT USED TO GROUP TABLES.	[LIKE FOLDERS IN WINDOWS TO GROUP FILES]
			DATABASE CAN CONTAIN MULTIPLE TABLES. TO GROUP THE RELEVANT OR RELATED TABLES 
			FOR EASIER ACCESS WE USE SCHEMAS.
EXAMPLE		IN A BANKING DATABASE:
			WE CAN DEFINE ONE SCHEMA "ACCOUNTS" AND STORE ALL TABLES PERTAINING TO ACCOUNTS DATA.
			WE CAN DEFINE ONE SCHEMA "TRANSACTIONS" AND STORE ALL TABLES PERTAINING TO TRANSACTIONS DATA.

REAL-TIME USE OF SCHEMAS:
			1. FOR EASY ACCESS IN THE REPORTING TOOLS : EXCEL, POWER BI, MSBI, ETC...
			2. FOR EASY SECURITY MANAGEMENT.
*/


-- STEP 1:	CREATE DATABASE											DRIVE
CREATE DATABASE DB_TEST
GO
USE DB_TEST
-- STEP 2:	CREATE SCHEMA											FOLDER
CREATE SCHEMA SCHEMA1

-- STEP 3:  CREATE TABLE USING ABOVE SCHEMA							FILE
CREATE TABLE SCHEMA1.TABLE1 (COL1 INT, COL2 INT) 
INSERT INTO SCHEMA1.TABLE1 VALUES (1,1), (2,2), (3,3)
SELECT * FROM SCHEMA1.TABLE1

-- STEP 3:  CREATE TABLE USING ABOVE SCHEMA							FILE
CREATE TABLE SCHEMA1.TABLE2 (COL1 INT, COL2 INT) 
INSERT INTO SCHEMA1.TABLE2 VALUES (11,1), (12,2), (13,3)
SELECT * FROM SCHEMA1.TABLE2

-- STEP 4: HOW TO USE DEFAULT SCHEMA = "DBO" : DATABASE OWNER
CREATE TABLE TABLE2 (COL1 INT, COL2 INT) 
INSERT INTO TABLE2 VALUES (11,1), (12,2), (13,3)
SELECT * FROM TABLE2
SELECT * FROM DBO.TABLE2